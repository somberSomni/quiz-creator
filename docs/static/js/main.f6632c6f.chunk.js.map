{"version":3,"sources":["data/index.js","components/Choice.jsx","components/Button.jsx","components/SubmitButton.jsx","components/InputChoice.jsx","components/AnswerMessage.jsx","components/Problem.jsx","components/Quiz.jsx","components/StartMenu.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","question","choices","answer","SelectIcon","styled","div","_templateObject","ChoiceContainer","_templateObject2","props","correct","disable","ChoiceText","p","_templateObject3","Choice","_ref","choice","handleSelected","index","selected","_useState","useState","_useState2","Object","slicedToArray","onChoice","setOnChoice","react_default","a","createElement","onMouseEnter","onMouseLeave","onClick","enable","index_es","icon","style","color","Button","button","Button_templateObject","turnOff","SubmitButton","label","checkAnswer","bgcolor","buttonLabel","setLabel","_useState3","_useState4","setColor","_useState5","_useState6","emoji","setEmoji","useEffect","toLowerCase","components_Button","InputContainer","input","InputChoice_templateObject","InputChoice","setInputAnswer","Fragment","type","placeholder","onChange","e","target","value","Message","AnswerMessage_templateObject","AnswerMessage","show","concat","ProblemContainer","Problem_templateObject","width","Problem","numOfTries","answerCondition","Array","length","choiceCondition","setSelected","correctAnswer","setCorrectAnswer","tries","setTries","_useState7","_useState8","inputAnswer","i","remove","arguments","undefined","newSelected","slice","mappedAnswers","map","findIndex","marginTop","key","toString","filter","each","every","Quiz","quiz","problem","assign","id","Container","StartMenu_templateObject","StartMenu","setStart","library","add","faChevronDown","faCircle","Boolean","window","location","hostname","match","ReactDOM","render","start","className","questions","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6632c6f.chunk.js","sourcesContent":["module.exports = [\r\n    {\r\n        question: 'What is the capital of Texas?',\r\n        choices: ['New England', 'Austin', 'Pleasantville', 'El Paso'],\r\n        answer: 'Austin'\r\n    }, \r\n    {\r\n        question: 'How many ways can you cook a fish?',\r\n        choices: ['Bake', 'Fry', 'Raw', 'Grill'],\r\n        answer: ['Bake', 'Fry', 'Raw', 'Grill']\r\n    },\r\n    {\r\n        question: 'If x = 4, what is the derivative of f(x) = 3x^2?',\r\n        answer: 24\r\n    }\r\n]","import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SelectIcon = styled.div`\r\n    border-radius: 50%;\r\n    border: 4px solid black;\r\n    height: 19px;\r\n    width: 18px;\r\n    padding: 0px 1px;\r\n`;\r\n\r\nconst ChoiceContainer = styled.div`\r\n    margin-top: 5px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    min-width: 200px;\r\n    max-width: 75vw;\r\n    width: 100%;\r\n    height: 25px;\r\n    background: rgba(0,0,0,0);\r\n    box-shadow: ${props => props.correct ? '1px 1px 4px 2px rgba(0,0,0,0.2)' : 'none'};\r\n    cursor: ${props => props.disable ? 'default' : 'pointer'};\r\n    padding: 5px 10px;\r\n    border-radius: 5px;\r\n    opacity: ${props => props.disable && !props.correct ? '0.3' : '1'};\r\n    &:hover {\r\n        background: ${props => props.disable ? 'rgba(0,0,0,0)' : '#CCC'};\r\n    }\r\n`;\r\n\r\nconst ChoiceText = styled.p`\r\n    margin-left: 10px;\r\n`;\r\nexport default function Choice({ choice, handleSelected, index, selected, disable, correct }) {\r\n    const [onChoice, setOnChoice] = useState(false);\r\n    return (\r\n        <ChoiceContainer\r\n            disable={disable}\r\n            correct={correct}\r\n            onMouseEnter={() => { if (!disable) setOnChoice(true) }}\r\n            onMouseLeave={() => { if (!disable) setOnChoice(false) }}\r\n            onClick={() => {\r\n                if (selected) {\r\n                    handleSelected(index, choice, true);\r\n                } else {\r\n                    handleSelected(index, choice)\r\n                }\r\n            }}\r\n            enable={onChoice}>\r\n            <SelectIcon >\r\n                <FontAwesomeIcon\r\n                    icon={['fas', 'circle']}\r\n                    style={{\r\n                        color: onChoice ?\r\n                            (selected ? 'black' : '#999999') :\r\n                            (selected ? 'black' : 'rgba(0,0,0,0)')\r\n                    }} />\r\n            </SelectIcon>\r\n            <ChoiceText>{choice}</ChoiceText>\r\n        </ChoiceContainer>\r\n    )\r\n}\r\n\r\nChoice.propTypes = {\r\n    choice: PropTypes.string, \r\n    handleSelected: PropTypes.func, \r\n    index: PropTypes.number, \r\n    selected: PropTypes.bool, \r\n    disable: PropTypes.bool, \r\n    correct: PropTypes.bool\r\n}","import styled from 'styled-components';\r\nconst Button = styled.button`\r\n    font-size: 1em;\r\n    min-width: 200px;\r\n    padding: 10px;\r\n    margin-top: 10px;\r\n    border: none;\r\n    background-color: ${props => props.color}\r\n    border-radius: 5px;\r\n    opacity: ${props => props.turnOff ? '0.3' : '1'};\r\n    cursor: ${props => props.turnOff ? 'not-allowed' : (props.disable ? 'default' : 'pointer')};\r\n    transition: opacity 500ms, background-color 1s;\r\n    &:hover {\r\n        opacity: ${props => props.turnOff? '0.3' : (props.disable ? '1' : '0.7')};\r\n        box-shadow: ${props => props.turnOff || props.disable ? 'none' : '1px 1px 4px 2px rgba(0,0,0,0.2)'};\r\n    }\r\n`;\r\n\r\nexport default Button;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button.jsx';\r\n\r\nexport default function SubmitButton({ label, checkAnswer, disable, turnOff, bgcolor }) {\r\n    const [buttonLabel, setLabel] = useState(label || 'Submit')\r\n    const [color, setColor] = useState(bgcolor || '#198C8C');\r\n    const [emoji, setEmoji] = useState('')\r\n    useEffect(() => {\r\n        switch(buttonLabel.toLowerCase()) {\r\n            case 'correct':\r\n                setColor('#5AC18E');\r\n                setEmoji('👍');\r\n                break;\r\n            case 'try again':\r\n                setColor('#999');\r\n                setEmoji('');\r\n                break;\r\n            case 'wrong':\r\n                setColor('#F00000');\r\n                setEmoji('👎');\r\n                break;\r\n            default:\r\n                setColor(bgcolor || '#198C8C')\r\n                setEmoji('');\r\n                break;\r\n        }\r\n    }, [buttonLabel])\r\n    return (\r\n        <Button \r\n            turnOff={turnOff}\r\n            disable={disable}\r\n            color={color}\r\n            onClick={() => { if(!disable) checkAnswer(setLabel) }}>\r\n            {buttonLabel} {emoji}\r\n        </Button>\r\n    )\r\n}\r\n\r\nSubmitButton.propTypes = {\r\n    label: PropTypes.string, \r\n    checkAnswer: PropTypes.func, \r\n    disable: PropTypes.bool, \r\n    turnOff: PropTypes.bool, \r\n    bgcolor: PropTypes.string\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst InputContainer = styled.input`\r\n    min-width: 200px;\r\n    max-width: 80vw;\r\n    padding: 5px;\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport default function InputChoice({setInputAnswer}) {\r\n    return (\r\n        <React.Fragment>\r\n            <InputContainer \r\n                type='text' \r\n                placeholder='Type your answer here'\r\n                onChange={e => { setInputAnswer(e.target.value) }}/>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Message = styled.div`\r\n    font-size: 1em;\r\n`;\r\nexport default function AnswerMessage({ show, correct, answer }) {\r\n    return (\r\n        <Message>\r\n            { show ? (correct ?  'Well done!' : `The answer is ${answer}`) : null}\r\n        </Message>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport Choice from './Choice.jsx';\r\nimport SubmitButton from './SubmitButton.jsx';\r\nimport InputChoice from './InputChoice.jsx';\r\nimport AnswerMessage from './AnswerMessage.jsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProblemContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    width: ${props => props.width || '600px'};\r\n`;\r\nexport default function Problem({ question, choices, answer, numOfTries, width }) {\r\n    const answerCondition = answer instanceof Array && answer.length > 1 && choices && choices instanceof Array;\r\n    const choiceCondition = choices && choices instanceof Array && choices.length > 1;\r\n    const [selected, setSelected] = useState(answerCondition ? [] : -1);\r\n    const [correctAnswer, setCorrectAnswer] = useState(answerCondition ? [] : -1);\r\n    const [tries, setTries] = useState(numOfTries || 1);\r\n    const [inputAnswer, setInputAnswer] = useState('');\r\n    useEffect(() => {\r\n        if (answerCondition) {\r\n            const mappedAnswers = choices.map(choice => {\r\n                const answerFound = answer.findIndex(a => a == choice) !== -1;\r\n                if (answerFound) {\r\n                    return choice;\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n            setCorrectAnswer(mappedAnswers)\r\n        } else {\r\n            if (choices && choices.length > 1) {\r\n                setCorrectAnswer(choices.findIndex(choice => choice == answer))\r\n            }\r\n        }\r\n    }, []);\r\n    function handleSelected(i, choice, remove = false) {\r\n        if (answerCondition) {\r\n            let newSelected = selected.slice();\r\n            if (!newSelected[i]) {\r\n                newSelected[i] = choice;\r\n            } else {\r\n                if (remove) {\r\n                    newSelected[i] = null;\r\n                }\r\n            }\r\n            setSelected(newSelected);\r\n        } else {\r\n            if (remove) {\r\n                setSelected(-1)\r\n            } else {\r\n                setSelected(i)\r\n            }\r\n        }\r\n    }\r\n    function checkAnswer(setLabel) {\r\n        //continues to check answers based on number of tries allowed\r\n        if (tries > 0) {\r\n            if (answerCondition) {\r\n                const isCorrect = correctAnswer.every((a, i) => a == selected[i])\r\n                if (isCorrect) {\r\n                    setLabel('Correct');\r\n                } else {\r\n                    if (tries > 1) {\r\n                        setLabel('Try Again')\r\n                    } else {\r\n                        setLabel('Wrong');\r\n                    }\r\n                }\r\n            } else {\r\n                if (choiceCondition) {\r\n                    if (choices[selected] == answer) {\r\n                        setLabel('Correct');\r\n                    } else {\r\n                        if (tries > 1) {\r\n                            setLabel('Try Again');\r\n                        } else {\r\n                            setLabel('Wrong');\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (answer == inputAnswer) {\r\n                        setLabel('Correct');\r\n                    } else {\r\n                        if (tries > 1) {\r\n                            setLabel('Try Again');\r\n                        } else {\r\n                            setLabel('Wrong');\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            setTries(tries - 1);\r\n        }\r\n    }\r\n    return (\r\n        <ProblemContainer width={width}>\r\n            <p>{question}</p>\r\n            {answerCondition ? <h5 style={{ marginTop: -5 }}>Select One or More</h5> : null}\r\n            {choiceCondition ?\r\n                choices.map((choice, i) => <Choice\r\n                    key={i.toString()}\r\n                    selected={answerCondition ? (selected[i] === choice) : selected === i}\r\n                    choice={choice}\r\n                    disable={tries <= 0}\r\n                    correct={answerCondition ? (correctAnswer[i] && tries <= 0 ? true : false) : (correctAnswer === i && tries <= 0)}\r\n                    handleSelected={handleSelected}\r\n                    index={i} />) :\r\n                <InputChoice setInputAnswer={setInputAnswer} />}\r\n            {choiceCondition ? null : <AnswerMessage show={tries <= 0} correct={answer == inputAnswer} answer={answer} />}\r\n            <SubmitButton disable={tries <= 0} turnOff={answerCondition ? (selected.filter(each => each).length === 0) : (choiceCondition ? selected === -1 : inputAnswer.length === 0)} checkAnswer={checkAnswer} />\r\n        </ProblemContainer>\r\n    )\r\n}\r\n\r\nProblem.propTypes = {\r\n    question: PropTypes.string,\r\n    choices: PropTypes.array,\r\n    answer: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n        PropTypes.array]),\r\n    numOfTries: PropTypes.number,\r\n    width: PropTypes.number\r\n}","import React from 'react';\r\nimport Problem from './Problem.jsx';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Quiz({quiz}) {\r\n    return (\r\n        <React.Fragment>\r\n            { quiz.map((problem, i) => <Problem key={i.toString()} {...problem} id={i}/>) }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nQuiz.propTypes = {\r\n    quiz: PropTypes.arrayOf(PropTypes.shape({\r\n        question: PropTypes.string,\r\n        choices: PropTypes.array,\r\n        answer: PropTypes.oneOfType([\r\n            PropTypes.string,\r\n            PropTypes.number,\r\n            PropTypes.array])\r\n    }))\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button.jsx';\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justiy-content: center;\r\n    align-items: center;\r\n    width: 300px;\r\n`;\r\nexport default function StartMenu({setStart}) {\r\n    return (\r\n        <Container>\r\n            <h1>Quiz App Demo</h1>\r\n            <p>Created this component to allow for creating easy Quizes with barely any work</p>\r\n            <Button onClick={() => { setStart(true) }}>Start</Button>\r\n        </Container>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport questions from './data/index.js';\r\n//components\r\nimport Quiz from './components/Quiz.jsx';\r\nimport StartMenu from './components/StartMenu.jsx';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { faChevronDown, faCircle } from '@fortawesome/free-solid-svg-icons'\r\n// import { faBracketsCurly, faPencilAlt, faEnvelope, faHomeAlt, faLaptopCode, faTimes, faServer, faDatabase, faPlus, faBrain, faChartPie } from '@fortawesome/pro-regular-svg-icons'\r\n// import { faFilePdf, faChartScatter, faHorizontalRule, faProjectDiagram } from '@fortawesome/pro-light-svg-icons'\r\n// import { faGithub, faVimeoV } from '@fortawesome/free-brands-svg-icons';\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nlibrary.add(\r\n  faChevronDown,\r\n  faCircle);\r\n\r\nexport default function App() {\r\n  const [start, setStart] = useState(false);\r\n  return (\r\n    <div className='App'>\r\n      {start ? <Quiz quiz={questions} /> : <StartMenu setStart={setStart} />}\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}